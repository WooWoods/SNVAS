ROUTINE = '/home/wuj/project/association_analysis/AS_test'
GENOFILE = '/home/wuj/project/association_analysis/AS_test/data/sample.geno'
INFOFILE = '/home/wuj/project/association_analysis/AS_test/data/sample.info'
SNPFILE = '/home/wuj/project/association_analysis/AS_test/data/anno.txt'
HAPFILE = ''
GENDER = 2
CORRECTION = 2,3

# cols of phenotype
PHENO = 2,3
CHI_TEST = 2
TTEST = 3

# cols for stratification
STRATIFY = (2, 1),


# ROUTINE    为项目分析目录，当前项目所有分析内容均在该目录下
# GENOFILE   为基因型文件
# INFOFILE   为表型文件, 第一列为样本名，第二列必须为 'case/control'信息
# SNPFILE    snv位点信息，最多5列，分别为['snp', 'chr', 'position', 'ref', 'alt', 'gene'], 最后一列gene信息可以为空，
#            当存在gene信息时，程序自动执行haplotype分析。
# HAPFILE    单倍型文件，用于定义单倍型分析时的block信息，单倍型分析时，不提供该文件，则程序自主分析block，
#            否则使用用户提供的文件进行分析
# GENDER     性别信息所在列
# CORRECTION 用于逻辑回归校正的表型所在列
# PHENO      用于表型分析的列
# CHI_TEST   进行卡方分析的表型，针对离散型数据
# TTEST      进行T检验的表型，针对连续型数据
# STRATIFY   对于需要分层的项目， 使用该信息进行分层。以数据对的形式表示，如本例中：(2,1)，其中第一位数据表示根据第几列
#            信息分层，此处表示第2列, 即根据性别分层, 第2位数据表示如何组合该列中的信息, 本例中1表示每次只使用性别列中的
#            一位信息，即男性或女性，类似于二项式中的
#                                                          /---1
#                                                        /
#                                                        |
#                                                        \
#                                                          \---2
#            可以定义多组, 运行分层 ASkit.py strati 后，用户将在项目根目录下获得一系列子项目的目录，用户根据自己的需要
#            进行删减，并检查其中的 sample.info 信息是否正确，若不正确，请自行修改后手动执行关联分析程序。
            



########################################################################
# 注意：所有列信息均以 0 起始                                          #
# 建议：所有数据的表头不要出现中文                                     #
########################################################################
